events {
    # Секция для настроек обработки событий (обычно оставляется пустой или с минимальными настройками)
}

http {
    # Определение upstream для балансировки нагрузки
    upstream api_backend {  
        ip_hash;  # Используется для балансировки по IP-адресу клиента (это обеспечивает, что запросы от одного клиента будут обрабатываться одним сервером)
        server api:8080;  # Указывает сервер для проксирования, в данном случае контейнер API, работающий на порту 8080
    }

    server {
        listen 80;  # Слушаем порт 80 

        location / {  
            # Основная настройка для проксирования запросов
            proxy_pass http://api_backend;  # Прокси-пасст через upstream api_backend
            proxy_set_header Host $host;  # Устанавливаем заголовок Host, чтобы сервер API видел правильный хост
            proxy_set_header X-Real-IP $remote_addr;  # Устанавливаем заголовок X-Real-IP с реальным IP клиента
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Добавляем исходный IP клиента в цепочку X-Forwarded-For
            proxy_set_header X-Forwarded-Proto $scheme;  # Устанавливаем схему (http/https), используемую в запросе
        }
    }
}
